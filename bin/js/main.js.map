{
"version":3,
"file":"main.js",
"sourceRoot":"",
"sources":["file:///C:/Prog/Haxe/Tic-tac-toe/src/Board.hx","file:///C:/Prog/Haxe/Tic-tac-toe/src/Cell.hx","file:///C:/Prog/Haxe/Tic-tac-toe/src/Game.hx","file:///C:/Prog/Haxe/Tic-tac-toe/src/Grid.hx","file:///C:/Prog/Haxe/Tic-tac-toe/src/Line.hx","file:///C:/Prog/Haxe/Tic-tac-toe/src/Main.hx","file:///C:/HaxeToolkit/haxe/std/js/_std/Reflect.hx","file:///C:/HaxeToolkit/haxe/std/js/_std/Type.hx","file:///C:/HaxeToolkit/haxe/std/haxe/Timer.hx","file:///C:/HaxeToolkit/haxe/std/haxe/ds/BalancedTree.hx","file:///C:/HaxeToolkit/haxe/std/haxe/ds/EnumValueMap.hx","file:///C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/IntMap.hx","file:///C:/HaxeToolkit/haxe/std/haxe/iterators/ArrayIterator.hx","file:///C:/HaxeToolkit/haxe/std/js/Boot.hx","file:///C:/HaxeToolkit/haxe/std/js/_std/Std.hx"],
"sourcesContent":["import haxe.Timer;\r\nimport pixi.core.Application;\r\nimport pixi.core.math.Point;\r\nimport pixi.loaders.Loader;\r\nimport pixi.core.math.shapes.Rectangle;\r\nimport Line;\r\n\r\nclass Board {\r\n    public var cells: Map<Int, Cell>;\r\n    public var onEnd: () -> Void;\r\n    public var onWin: (SignType: SignType) -> Void;\r\n    private var app: Application;\r\n    private var lines: Array<Line>;\r\n    private var move: SignType;\r\n    private var spineDatas: Map<SignType, Any> = new Map<SignType, Any>();\r\n    private var rect: Rectangle = new Rectangle(640, 220, 640, 640);\r\n\r\n    public function new(app: Application) {\r\n        this.app = app;\r\n\t\tvar loader = new Loader();\r\n\t\tloader.add(\"circle\", \"assets/spine/skeletons/circle.json\");\r\n\t\tloader.add(\"cross\", \"assets/spine/skeletons/cross.json\");\r\n\t\tloader.load(onAssetsLoaded);\r\n\r\n        var Grid = new Grid(app, rect);\r\n        InitCells();\r\n        InitLines();\r\n\r\n        move = SignType.Cross;\r\n    }\r\n\r\n    public function Restart() {\r\n        Clear();\r\n        move = SignType.Cross;\r\n    }\r\n\r\n    private function Clear() {\r\n        for (cell in cells) {\r\n            cell.Clear();\r\n        }\r\n    }\r\n\r\n    private function InitCells() {\r\n        cells = new Map<Int, Cell>();\r\n        var point = new Point();\r\n        var position = new Point();\r\n        var i = 1;\r\n        \r\n        for (x in 0...3) {\r\n            for (y in 0...3) {\r\n                point.set(x, y);\r\n                position.set(x * 220 + rect.x, y * 220 + rect.y);\r\n\r\n                var cell = new Cell(app, position);\r\n                cells[i++] = cell;\r\n                cell.onClick = OnClick;\r\n            }\r\n        }\r\n    }\r\n\r\n\tprivate function onAssetsLoaded(loader) {\r\n        spineDatas[SignType.Circle] = Reflect.field(loader.resources, \"circle\").spineData;\r\n        spineDatas[SignType.Cross] = Reflect.field(loader.resources, \"cross\").spineData;\r\n\t}\r\n\r\n    private function OnClick(cell: Cell): Void {\r\n        if (move != SignType.Cross) {\r\n            return;\r\n        }\r\n\r\n        cell.SetSign(SignType.Cross, spineDatas[SignType.Cross]);\r\n        move = SignType.Circle;\r\n\r\n        if (CheckEndGame()) {\r\n            onEnd();\r\n\r\n            return;\r\n        }\r\n\r\n        Timer.delay(EnemyMove, 500);\r\n    }\r\n\r\n    private function EnemyMove() {\r\n        var cell = FindBestMove();\r\n\r\n        if (cell == null) {\r\n            return;\r\n        }\r\n\r\n        cell.SetSign(SignType.Circle, spineDatas[SignType.Circle]);\r\n        move = SignType.Cross;\r\n        \r\n        if (CheckEndGame()) {\r\n            onEnd();\r\n        }\r\n    }\r\n\r\n    private function CheckEndGame(): Bool {\r\n        if (CheckWin()) {\r\n            return true;\r\n        }\r\n\r\n        for (cell in cells) {\r\n            if (cell.sign == SignType.None) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private function CheckWin(): Bool {\r\n        for (line in lines) {\r\n            for (sign in [SignType.Circle, SignType.Cross]) {\r\n                if (line.GetSum(sign) == 3) {\r\n                    line.AnimateWin();\r\n                    onWin(sign);\r\n    \r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private function FindBestMove(): Cell {\r\n        if (cells[5].sign == SignType.None) {\r\n            return cells[5];\r\n        }\r\n\r\n        for (line in lines) {\r\n            var empty = line.GetEmpty();\r\n\r\n            if (line.GetSum(SignType.Circle) == 2 && empty != null) {\r\n                return empty;\r\n            }\r\n        }\r\n\r\n        for (line in lines) {\r\n            var empty = line.GetEmpty();\r\n\r\n            if (line.GetSum(SignType.Cross) == 2 && empty != null) {\r\n                return empty;\r\n            }\r\n        }\r\n\r\n        // Player can win\r\n        for (line in lines) {\r\n            var empty = line.GetEmpty();\r\n\r\n            if (line.GetSum(SignType.Circle) == 1 && empty != null) {\r\n                return empty;\r\n            }\r\n        }\r\n\r\n        for (line in lines) {\r\n            var empty = line.GetEmpty();\r\n\r\n            if (empty != null) {\r\n                return empty;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private function InitLines() {\r\n        lines = [\r\n            new Line([cells[1], cells[2], cells[3]]),\r\n            new Line([cells[4], cells[5], cells[6]]),\r\n            new Line([cells[7], cells[8], cells[9]]),\r\n\r\n            new Line([cells[1], cells[4], cells[7]]),\r\n            new Line([cells[2], cells[5], cells[8]]),\r\n            new Line([cells[3], cells[6], cells[9]]),\r\n\r\n            new Line([cells[1], cells[5], cells[9]]),\r\n            new Line([cells[3], cells[5], cells[7]]),\r\n        ];\r\n    }\r\n}","\r\nimport pixi.core.graphics.Graphics;\r\nimport pixi.core.Application;\r\nimport pixi.plugins.spine.Spine;\r\nimport pixi.core.math.Point;\r\nimport SignType;\r\n\r\nclass Cell {\r\n    public var sign = SignType.None;\r\n    public var onClick: (cell: Cell) -> Void;\r\n    public var size:Int = 200;\r\n\r\n    private var app: Application;\r\n    private var spine: Spine;\r\n    private var graphic: Graphics;\r\n    private var position: Point;\r\n    \r\n    public function new(app: Application, position: Point) {\r\n        this.app = app;\r\n        this.position = new Point(position.x, position.y);\r\n\r\n\t\tgraphic = new Graphics();\r\n\t\tgraphic.beginFill(0x1FE1CC);\r\n\t\tgraphic.drawRect(position.x, position.y, size, size);\r\n\t\tgraphic.endFill();\r\n        graphic.interactive = true;\r\n        graphic.on(\"click\", OnClick);\r\n        graphic.alpha = 0;\r\n\r\n        app.stage.addChild(graphic);\r\n    }\r\n\r\n    public function SetSign(sign: SignType, spineData) {\r\n        this.sign = sign;\r\n        spine = new Spine(spineData);\r\n        spine.position.set(position.x + size / 2, position.y + size / 2);\r\n        app.stage.addChild(spine);\r\n        spine.state.setAnimation(0, \"draw\", false);\r\n    }\r\n\r\n    public function AnimateWin() {\r\n        graphic.alpha = 1;\r\n        spine.state.setAnimation(0, \"win\", true);\r\n    }\r\n\r\n    public function Clear() {\r\n        sign = SignType.None;\r\n        graphic.alpha = 0;\r\n        app.stage.removeChild(spine);\r\n    }\r\n\r\n    private function OnClick() {\r\n        if (sign == SignType.None) {\r\n            onClick(this);\r\n        }\r\n    }\r\n}","import haxe.Timer;\r\nimport pixi.core.graphics.Graphics;\r\nimport pixi.loaders.Loader;\r\nimport pixi.extras.BitmapText;\r\nimport pixi.core.Application;\r\n\r\nclass Game {\r\n    private var app: Application;\r\n    private var board: Board;\r\n    private var winText: Map<SignType, BitmapText> = new Map<SignType, BitmapText>();\r\n    private var graphic: Graphics;\r\n\r\n    public function new(app: Application) {\r\n        this.app = app;\r\n        board = new Board(app);\r\n        board.onWin = OnWin;\r\n        board.onEnd = OnEnd;\r\n\r\n        LoadAssets();\r\n        \r\n\t\tgraphic = new Graphics();\r\n\t\tgraphic.beginFill();\r\n\t\tgraphic.drawRect(0, 0, app.renderer.width, app.renderer.height);\r\n\t\tgraphic.endFill();\r\n        graphic.alpha = 0;\r\n        graphic.interactive = true;\r\n        graphic.on(\"click\", Restart);\r\n        graphic.visible = false;\r\n\r\n        app.stage.addChild(graphic);\r\n    }\r\n\r\n    private function OnEnd() {\r\n        graphic.visible = true;\r\n    }\r\n\r\n    private function Restart() {\r\n        graphic.visible = false;\r\n        board.Restart();\r\n\r\n        for (sign in [SignType.Circle, SignType.Cross]) {\r\n            winText[sign].visible = false;\r\n        }\r\n    }\r\n\r\n    private function LoadAssets() {\r\n\t\tvar loader = new Loader();\r\n\t\tloader.add(\"darkFont\", \"assets/fonts/darkFont.fnt\");\r\n\t\tloader.add(\"lightFont\", \"assets/fonts/lightFont.fnt\");\r\n\t\tloader.load(onAssetsLoaded);\r\n    }\r\n\r\n    private function OnWin(sign: SignType): Void {\r\n        winText[sign].visible = true;\r\n    }\r\n\r\n    private function onAssetsLoaded(): Void {\r\n        var styleDark = {\r\n            font: 'darkFont',\r\n            fontSize: 120,\r\n            align: CENTER\r\n        };\r\n        var styleLight = {\r\n            font: 'lightFont',\r\n            fontSize: 120,\r\n            align: CENTER\r\n        };\r\n\r\n        var circleText = new BitmapText('Circle Wins', styleLight);\r\n        circleText.position.x = 600;\r\n        circleText.visible = false;\r\n        app.stage.addChild(circleText);\r\n        winText[SignType.Circle] = circleText;\r\n\r\n        var crossText = new BitmapText('Cross Wins', styleDark);\r\n        crossText.position.x = 600;\r\n        crossText.visible = false;\r\n        app.stage.addChild(crossText);\r\n        winText[SignType.Cross] = crossText;\r\n    }\r\n}","import pixi.core.math.shapes.Rectangle;\r\nimport pixi.core.graphics.Graphics;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.Application;\r\n\r\nclass Grid {\r\n    private var size = 20;\r\n\r\n    public function new(app: Application, rect: Rectangle) {\r\n\r\n\t\tvar graphic = new Graphics();\r\n\t\tgraphic.beginFill(0x00A492);\r\n\t\tgraphic.drawRect(rect.x + 200, rect.y, size, rect.height);\r\n\t\tgraphic.drawRect(rect.x + 420, rect.y, size, rect.height);\r\n\t\tgraphic.drawRect(rect.x, rect.y + 200, rect.width, size);\r\n\t\tgraphic.drawRect(rect.x, rect.y + 420, rect.width, size);\r\n\t\tgraphic.endFill();\r\n\r\n        app.stage.addChild(graphic);\r\n    }\r\n}","class Line {\r\n    public var cells: Array<Cell> = [];\r\n    \r\n    public function new(cells: Array<Cell>) {\r\n        this.cells = cells;\r\n    }\r\n\r\n    public function GetSum(sign: SignType): Int {\r\n        var sum = 0;\r\n\r\n        for (cell in cells) {\r\n            if (cell.sign == sign) {\r\n                sum++;\r\n            }\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n    public function GetEmpty(): Cell {\r\n        for (cell in cells) {\r\n            if (cell.sign == SignType.None) {\r\n                return cell;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public function AnimateWin() {\r\n        for (cell in cells) {\r\n            cell.AnimateWin();\r\n        }\r\n    }\r\n}","import pixi.core.Application;\r\nimport js.Browser;\r\n\r\nclass Main extends Application {\r\n\r\n\tpublic function new() {\r\n\t\t\r\n\t\tvar options:ApplicationOptions = {\r\n\t\t\twidth: 1920,\r\n\t\t\theight: 1080,\r\n\t\t\tbackgroundColor: 0x00C1AC,\r\n\t\t\tantialias: true\r\n\t\t};\r\n\t\t\r\n\t\tsuper(options);\r\n\t\tBrowser.document.body.appendChild(view);\r\n\r\n\t\tvar game = new Game(this);\r\n\t}\r\n\r\n\tstatic function main() {\r\n\t\tnew Main();\r\n\t}\r\n}","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n@:coreApi class Reflect {\r\n\t@:pure\r\n\tpublic inline static function hasField(o:Dynamic, field:String):Bool {\r\n\t\treturn js.lib.Object.prototype.hasOwnProperty.call(o, field);\r\n\t}\r\n\r\n\t@:pure\r\n\tpublic static function field(o:Dynamic, field:String):Dynamic {\r\n\t\ttry\r\n\t\t\treturn o[cast field]\r\n\t\tcatch (e:Dynamic)\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tpublic inline static function setField(o:Dynamic, field:String, value:Dynamic):Void {\r\n\t\to[cast field] = value;\r\n\t}\r\n\r\n\tpublic static function getProperty(o:Dynamic, field:String):Dynamic\r\n\t\tuntyped {\r\n\t\t\tvar tmp;\r\n\t\t\treturn if (o == null) __define_feature__(\"Reflect.getProperty\",\r\n\t\t\t\tnull) else if (o.__properties__ && (tmp = o.__properties__[\"get_\" + field])) o[tmp]() else o[field];\r\n\t\t}\r\n\r\n\tpublic static function setProperty(o:Dynamic, field:String, value:Dynamic):Void\r\n\t\tuntyped {\r\n\t\t\tvar tmp;\r\n\t\t\tif (o.__properties__ && (tmp = o.__properties__[\"set_\" + field]))\r\n\t\t\t\to[tmp](value)\r\n\t\t\telse\r\n\t\t\t\to[field] = __define_feature__(\"Reflect.setProperty\", value);\r\n\t\t}\r\n\r\n\tpublic inline static function callMethod(o:Dynamic, func:haxe.Constraints.Function, args:Array<Dynamic>):Dynamic {\r\n\t\treturn (cast func : js.lib.Function).apply(o, args);\r\n\t}\r\n\r\n\tpublic static function fields(o:Dynamic):Array<String> {\r\n\t\tvar a = [];\r\n\t\tif (o != null)\r\n\t\t\tuntyped {\r\n\t\t\t\tvar hasOwnProperty = js.lib.Object.prototype.hasOwnProperty;\r\n\t\t\t\tjs.Syntax.code(\"for( var f in o ) {\");\r\n\t\t\t\tif (f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f))\r\n\t\t\t\t\ta.push(f);\r\n\t\t\t\tjs.Syntax.code(\"}\");\r\n\t\t\t}\r\n\t\treturn a;\r\n\t}\r\n\r\n\t@:access(js.Boot)\r\n\tpublic static function isFunction(f:Dynamic):Bool {\r\n\t\treturn js.Syntax.typeof(f) == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\r\n\t}\r\n\r\n\tpublic static function compare<T>(a:T, b:T):Int {\r\n\t\treturn (a == b) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\r\n\t}\r\n\r\n\tpublic static inline function compareMethods(f1:Dynamic, f2:Dynamic):Bool {\r\n\t\treturn f1 == f2;\r\n\t}\r\n\r\n\t@:access(js.Boot)\r\n\tpublic static function isObject(v:Dynamic):Bool {\r\n\t\tif (v == null)\r\n\t\t\treturn false;\r\n\t\tvar t = js.Syntax.typeof(v);\r\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null))\r\n\t\t\t|| (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\r\n\t}\r\n\r\n\tpublic static function isEnumValue(v:Dynamic):Bool {\r\n\t\treturn v != null && v.__enum__ != null;\r\n\t}\r\n\r\n\tpublic static function deleteField(o:Dynamic, field:String):Bool {\r\n\t\tif (!hasField(o, field))\r\n\t\t\treturn false;\r\n\t\tjs.Syntax.delete(o, field);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static function copy<T>(o:Null<T>):Null<T> {\r\n\t\tif (o == null)\r\n\t\t\treturn null;\r\n\t\tvar o2:Dynamic = {};\r\n\t\tfor (f in Reflect.fields(o))\r\n\t\t\tReflect.setField(o2, f, Reflect.field(o, f));\r\n\t\treturn o2;\r\n\t}\r\n\r\n\t@:overload(function(f:Array<Dynamic>->Void):Dynamic {})\r\n\tpublic static function makeVarArgs(f:Array<Dynamic>->Dynamic):Dynamic {\r\n\t\treturn function() {\r\n\t\t\tvar a = untyped Array.prototype.slice.call(js.Syntax.code(\"arguments\"));\r\n\t\t\treturn f(a);\r\n\t\t};\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\nenum ValueType {\r\n\tTNull;\r\n\tTInt;\r\n\tTFloat;\r\n\tTBool;\r\n\tTObject;\r\n\tTFunction;\r\n\tTClass(c:Class<Dynamic>);\r\n\tTEnum(e:Enum<Dynamic>);\r\n\tTUnknown;\r\n}\r\n\r\n@:coreApi class Type {\r\n\tpublic static inline function getClass<T>(o:T):Class<T> {\r\n\t\treturn @:privateAccess js.Boot.getClass(o);\r\n\t}\r\n\r\n\tpublic static function getEnum(o:EnumValue):Enum<Dynamic>\r\n\t\tuntyped {\r\n\t\t\tif (o == null)\r\n\t\t\t\treturn null;\r\n\t\t\t#if js_enums_as_arrays\r\n\t\t\treturn o.__enum__;\r\n\t\t\t#else\r\n\t\t\treturn $hxEnums[o.__enum__];\r\n\t\t\t#end\r\n\t\t}\r\n\r\n\tpublic static inline function getSuperClass(c:Class<Dynamic>):Class<Dynamic> {\r\n\t\treturn untyped __define_feature__(\"Type.getSuperClass\", c.__super__);\r\n\t}\r\n\r\n\tpublic static inline function getClassName(c:Class<Dynamic>):String {\r\n\t\treturn untyped __define_feature__(\"Type.getClassName\", c.__name__);\r\n\t}\r\n\r\n\tpublic static inline function getEnumName(e:Enum<Dynamic>):String {\r\n\t\treturn untyped __define_feature__(\"Type.getEnumName\", e.__ename__);\r\n\t}\r\n\r\n\t#if js_enums_as_arrays\r\n\tpublic static function resolveClass(name:String):Class<Dynamic>\r\n\t\tuntyped {\r\n\t\t\tvar cl:Class<Dynamic> = $hxClasses[name];\r\n\t\t\t// ensure that this is a class\r\n\t\t\tif (cl == null || !js.Boot.isClass(cl))\r\n\t\t\t\treturn null;\r\n\t\t\treturn cl;\r\n\t\t}\r\n\r\n\tpublic static function resolveEnum(name:String):Enum<Dynamic>\r\n\t\tuntyped {\r\n\t\t\tvar e:Dynamic = $hxClasses[name];\r\n\t\t\t// ensure that this is an enum\r\n\t\t\tif (e == null || !js.Boot.isEnum(e))\r\n\t\t\t\treturn null;\r\n\t\t\treturn e;\r\n\t\t}\r\n\t#else\r\n\tpublic static inline function resolveClass(name:String):Class<Dynamic> {\r\n\t\treturn untyped __define_feature__(\"Type.resolveClass\", $hxClasses[name]);\r\n\t}\r\n\r\n\tpublic static inline function resolveEnum(name:String):Enum<Dynamic> {\r\n\t\treturn untyped __define_feature__(\"Type.resolveEnum\", $hxEnums[name]);\r\n\t}\r\n\t#end\r\n\r\n\t#if (js_es < 5)\r\n\tpublic static function createInstance<T>(cl:Class<T>, args:Array<Dynamic>):T {\r\n\t\tswitch (args.length) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn js.Syntax.construct(cl);\r\n\t\t\tcase 1:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0]);\r\n\t\t\tcase 2:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1]);\r\n\t\t\tcase 3:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2]);\r\n\t\t\tcase 4:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3]);\r\n\t\t\tcase 5:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4]);\r\n\t\t\tcase 6:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5]);\r\n\t\t\tcase 7:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\r\n\t\t\tcase 8:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]);\r\n\t\t\tcase 9:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8]);\r\n\t\t\tcase 10:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9]);\r\n\t\t\tcase 11:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10]);\r\n\t\t\tcase 12:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11]);\r\n\t\t\tcase 13:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11],\r\n\t\t\t\t\targs[12]);\r\n\t\t\tcase 14:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11],\r\n\t\t\t\t\targs[12], args[13]);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"Too many arguments\";\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function createEmptyInstance<T>(cl:Class<T>):T\r\n\t\tuntyped {\r\n\t\t\tjs.Syntax.code(\"function empty() {}; empty.prototype = cl.prototype\");\r\n\t\t\treturn js.Syntax.code(\"new empty()\");\r\n\t\t}\r\n\t#else\r\n\tpublic static function createInstance<T>(cl:Class<T>, args:Array<Dynamic>):T {\r\n\t\tvar ctor = ((cast js.lib.Function).prototype.bind : js.lib.Function).apply(cl, [null].concat(args));\r\n\t\treturn js.Syntax.code(\"new ({0})\", ctor); // cannot use `js.Syntax.construct` because we need parens if `ctor` is fused in\r\n\t}\r\n\r\n\tpublic static inline function createEmptyInstance<T>(cl:Class<T>):T {\r\n\t\treturn js.lib.Object.create((cast cl).prototype);\r\n\t}\r\n\t#end\r\n\r\n\tpublic static function createEnum<T>(e:Enum<T>, constr:String, ?params:Array<Dynamic>):T {\r\n\t\tvar f:Dynamic = Reflect.field(e, constr);\r\n\t\tif (f == null)\r\n\t\t\tthrow \"No such constructor \" + constr;\r\n\t\tif (Reflect.isFunction(f)) {\r\n\t\t\tif (params == null)\r\n\t\t\t\tthrow \"Constructor \" + constr + \" need parameters\";\r\n\t\t\treturn Reflect.callMethod(e, f, params);\r\n\t\t}\r\n\t\tif (params != null && params.length != 0)\r\n\t\t\tthrow \"Constructor \" + constr + \" does not need parameters\";\r\n\t\treturn f;\r\n\t}\r\n\r\n\tpublic static function createEnumIndex<T>(e:Enum<T>, index:Int, ?params:Array<Dynamic>):T {\r\n\t\t#if js_enums_as_arrays\r\n\t\tvar c:String = (untyped e.__constructs__)[index];\r\n\t\t#else\r\n\t\tvar c:String = switch (untyped e.__constructs__)[index] {\r\n\t\t\tcase null: null;\r\n\t\t\tcase ctor: ctor._hx_name;\r\n\t\t}\r\n\t\t#end\r\n\t\tif (c == null)\r\n\t\t\tthrow index + \" is not a valid enum constructor index\";\r\n\t\treturn createEnum(e, c, params);\r\n\t}\r\n\r\n\t#if (js_es >= 6)\r\n\tpublic static function getInstanceFields(c:Class<Dynamic>):Array<String> {\r\n\t\tvar result = [];\r\n\t\twhile (c != null) {\r\n\t\t\tfor (name in js.lib.Object.getOwnPropertyNames((cast c).prototype)) {\r\n\t\t\t\tswitch name {\r\n\t\t\t\t\tcase \"constructor\" | \"__class__\" | \"__properties__\":\r\n\t\t\t\t\t// skip special names\r\n\t\t\t\t\tcase _:\r\n\t\t\t\t\t\tif (result.indexOf(name) == -1)\r\n\t\t\t\t\t\t\tresult.push(name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc = getSuperClass(c);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static function getClassFields(c:Class<Dynamic>):Array<String> {\r\n\t\tvar a = js.lib.Object.getOwnPropertyNames(cast c);\r\n\t\ta.remove(\"__id__\");\r\n\t\ta.remove(\"hx__closures__\");\r\n\t\ta.remove(\"__name__\");\r\n\t\ta.remove(\"__interfaces__\");\r\n\t\ta.remove(\"__isInterface__\");\r\n\t\ta.remove(\"__properties__\");\r\n\t\ta.remove(\"__instanceFields__\");\r\n\t\ta.remove(\"__super__\");\r\n\t\ta.remove(\"__meta__\");\r\n\t\ta.remove(\"prototype\");\r\n\t\ta.remove(\"name\");\r\n\t\ta.remove(\"length\");\r\n\t\treturn a;\r\n\t}\r\n\t#else\r\n\tpublic static function getInstanceFields(c:Class<Dynamic>):Array<String> {\r\n\t\tvar a = [];\r\n\t\tjs.Syntax.code(\"for(var i in c.prototype) a.push(i)\");\r\n\t\ta.remove(\"__class__\");\r\n\t\ta.remove(\"__properties__\");\r\n\t\treturn a;\r\n\t}\r\n\r\n\tpublic static function getClassFields(c:Class<Dynamic>):Array<String> {\r\n\t\tvar a = Reflect.fields(c);\r\n\t\ta.remove(\"__name__\");\r\n\t\ta.remove(\"__interfaces__\");\r\n\t\ta.remove(\"__properties__\");\r\n\t\ta.remove(\"__super__\");\r\n\t\ta.remove(\"__meta__\");\r\n\t\ta.remove(\"prototype\");\r\n\t\treturn a;\r\n\t}\r\n\t#end\r\n\r\n\tpublic static inline function getEnumConstructs(e:Enum<Dynamic>):Array<String> {\r\n\t\t#if js_enums_as_arrays\r\n\t\t\treturn ((cast e).__constructs__ : Array<String>).copy();\r\n\t\t#else\r\n\t\t\treturn ((cast e).__constructs__ : Array<{_hx_name:String}>).map(c -> c._hx_name);\r\n\t\t#end\r\n\t}\r\n\r\n\t@:access(js.Boot)\r\n\tpublic static function typeof(v:Dynamic):ValueType {\r\n\t\tswitch (js.Syntax.typeof(v)) {\r\n\t\t\tcase \"boolean\":\r\n\t\t\t\treturn TBool;\r\n\t\t\tcase \"string\":\r\n\t\t\t\treturn TClass(String);\r\n\t\t\tcase \"number\":\r\n\t\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\r\n\t\t\t\tif (Math.ceil(v) == v % 2147483648.0)\r\n\t\t\t\t\treturn TInt;\r\n\t\t\t\treturn TFloat;\r\n\t\t\tcase \"object\":\r\n\t\t\t\tif (v == null)\r\n\t\t\t\t\treturn TNull;\r\n\t\t\t\tvar e = v.__enum__;\r\n\t\t\t\tif (e != null) {\r\n\t\t\t\t\t#if js_enums_as_arrays\r\n\t\t\t\t\treturn TEnum(e);\r\n\t\t\t\t\t#else\r\n\t\t\t\t\treturn TEnum(untyped $hxEnums[e]);\r\n\t\t\t\t\t#end\r\n\t\t\t\t}\r\n\t\t\t\tvar c = js.Boot.getClass(v);\r\n\t\t\t\tif (c != null)\r\n\t\t\t\t\treturn TClass(c);\r\n\t\t\t\treturn TObject;\r\n\t\t\tcase \"function\":\r\n\t\t\t\tif (js.Boot.isClass(v) || js.Boot.isEnum(v))\r\n\t\t\t\t\treturn TObject;\r\n\t\t\t\treturn TFunction;\r\n\t\t\tcase \"undefined\":\r\n\t\t\t\treturn TNull;\r\n\t\t\tdefault:\r\n\t\t\t\treturn TUnknown;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function enumEq<T:EnumValue>(a:T, b:T):Bool\r\n\t\tuntyped {\r\n\t\t\tif (a == b)\r\n\t\t\t\treturn true;\r\n\t\t\ttry {\r\n\t\t\t\tvar e = a.__enum__;\r\n\t\t\t\tif (e == null || e != b.__enum__)\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t#if js_enums_as_arrays\r\n\t\t\t\tif (a[0] != b[0])\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tfor (i in 2...a.length)\r\n\t\t\t\t\tif (!enumEq(a[i], b[i]))\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t#else\r\n\t\t\t\tif (a._hx_index != b._hx_index)\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tvar enm = $hxEnums[e];\r\n\t\t\t\tvar params:Array<String> = enm.__constructs__[a._hx_index].__params__;\r\n\t\t\t\tfor (f in params) {\r\n\t\t\t\t\tif (!enumEq(a[f], b[f])) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t#end\r\n\t\t\t} catch (e:Dynamic) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\tpublic inline static function enumConstructor(e:EnumValue):String {\r\n\t\t#if js_enums_as_arrays\r\n\t\treturn untyped e[0];\r\n\t\t#else\r\n\t\treturn untyped $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name;\r\n\t\t#end\r\n\t}\r\n\r\n\t#if js_enums_as_arrays\r\n\tpublic inline static function enumParameters(e:EnumValue):Array<Dynamic> {\r\n\t\treturn untyped e.slice(2);\r\n\t}\r\n\t#else\r\n\tpublic static function enumParameters(e:EnumValue):Array<Dynamic>\r\n\t\tuntyped {\r\n\t\t\tvar enm:Enum<Dynamic> = $hxEnums[e.__enum__];\r\n\t\t\tvar params:Array<String> = enm.__constructs__[e._hx_index].__params__;\r\n\t\t\treturn params != null ? [for (p in params) e[p]] : [];\r\n\t\t}\r\n\t#end\r\n\r\n\tpublic inline static function enumIndex(e:EnumValue):Int {\r\n\t\t#if !js_enums_as_arrays\r\n\t\treturn untyped e._hx_index;\r\n\t\t#else\r\n\t\treturn untyped e[1];\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic inline static function allEnums<T>(e:Enum<T>):Array<T> {\r\n\t\treturn untyped __define_feature__(\"Type.allEnums\", e.__empty_constructs__.slice());\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe;\r\n\r\n#if (target.threaded && !cppia)\r\nimport sys.thread.Thread;\r\nimport sys.thread.EventLoop;\r\n#end\r\n\r\n/**\r\n\tThe `Timer` class allows you to create asynchronous timers on platforms that\r\n\tsupport events.\r\n\r\n\tThe intended usage is to create an instance of the `Timer` class with a given\r\n\tinterval, set its `run()` method to a custom function to be invoked and\r\n\teventually call `stop()` to stop the `Timer`.\r\n\r\n\tNote that a running `Timer` may or may not prevent the program to exit\r\n\tautomatically when `main()` returns.\r\n\r\n\tIt is also possible to extend this class and override its `run()` method in\r\n\tthe child class.\r\n\r\n\tNotice for threaded targets:\r\n\t`Timer` instances require threads they were created in to run with Haxe's event loops.\r\n\tMain thread of a Haxe program always contains an event loop. For other cases use \r\n\t`sys.thread.Thread.createWithEventLoop` and `sys.thread.Thread.runWithEventLoop` methods.\r\n**/\r\nclass Timer {\r\n\t#if (flash || js)\r\n\tprivate var id:Null<Int>;\r\n\t#elseif (target.threaded && !cppia)\r\n\tvar thread:Thread;\r\n\tvar eventHandler:EventHandler;\r\n\t#else\r\n\tprivate var event:MainLoop.MainEvent;\r\n\t#end\r\n\r\n\t/**\r\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\r\n\r\n\t\tAfter creating the Timer instance, it calls `this.run` repeatedly,\r\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\r\n\r\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\r\n\t\timmediately.\r\n\r\n\t\tThe accuracy of this may be platform-dependent.\r\n\t**/\r\n\tpublic function new(time_ms:Int) {\r\n\t\t#if flash\r\n\t\tvar me = this;\r\n\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() {\r\n\t\t\tme.run();\r\n\t\t}, time_ms);\r\n\t\t#elseif js\r\n\t\tvar me = this;\r\n\t\tid = untyped setInterval(function() me.run(), time_ms);\r\n\t\t#elseif (target.threaded && !cppia)\r\n\t\tthread = Thread.current();\r\n\t\teventHandler = thread.events.repeat(() -> this.run(), time_ms);\r\n\t\t#else\r\n\t\tvar dt = time_ms / 1000;\r\n\t\tevent = MainLoop.add(function() {\r\n\t\t\t@:privateAccess event.nextRun += dt;\r\n\t\t\trun();\r\n\t\t});\r\n\t\tevent.delay(dt);\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tStops `this` Timer.\r\n\r\n\t\tAfter calling this method, no additional invocations of `this.run`\r\n\t\twill occur.\r\n\r\n\t\tIt is not possible to restart `this` Timer once stopped.\r\n\t**/\r\n\tpublic function stop() {\r\n\t\t#if (flash || js)\r\n\t\tif (id == null)\r\n\t\t\treturn;\r\n\t\t#if flash\r\n\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\r\n\t\t#elseif js\r\n\t\tuntyped clearInterval(id);\r\n\t\t#end\r\n\t\tid = null;\r\n\t\t#elseif (target.threaded && !cppia)\r\n\t\tthread.events.cancel(eventHandler);\r\n\t\t#else\r\n\t\tif (event != null) {\r\n\t\t\tevent.stop();\r\n\t\t\tevent = null;\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tThis method is invoked repeatedly on `this` Timer.\r\n\r\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\r\n\t\tfunction:\r\n\r\n\t\t```haxe\r\n\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\r\n\t\ttimer.run = function() { ... }\r\n\t\t```\r\n\r\n\t\tOnce bound, it can still be rebound to different functions until `this`\r\n\t\tTimer is stopped through a call to `this.stop`.\r\n\t**/\r\n\tpublic dynamic function run() {}\r\n\r\n\t/**\r\n\t\tInvokes `f` after `time_ms` milliseconds.\r\n\r\n\t\tThis is a convenience function for creating a new Timer instance with\r\n\t\t`time_ms` as argument, binding its `run()` method to `f` and then stopping\r\n\t\t`this` Timer upon the first invocation.\r\n\r\n\t\tIf `f` is `null`, the result is unspecified.\r\n\t**/\r\n\tpublic static function delay(f:Void->Void, time_ms:Int) {\r\n\t\tvar t = new haxe.Timer(time_ms);\r\n\t\tt.run = function() {\r\n\t\t\tt.stop();\r\n\t\t\tf();\r\n\t\t};\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\r\n\r\n\t\tThis is a convenience function for calculating the difference between\r\n\t\t`Timer.stamp()` before and after the invocation of `f`.\r\n\r\n\t\tThe difference is passed as argument to `Log.trace()`, with `\"s\"` appended\r\n\t\tto denote the unit. The optional `pos` argument is passed through.\r\n\r\n\t\tIf `f` is `null`, the result is unspecified.\r\n\t**/\r\n\tpublic static function measure<T>(f:Void->T, ?pos:PosInfos):T {\r\n\t\tvar t0 = stamp();\r\n\t\tvar r = f();\r\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\r\n\t\treturn r;\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns a timestamp, in seconds with fractions.\r\n\r\n\t\tThe value itself might differ depending on platforms, only differences\r\n\t\tbetween two values make sense.\r\n\t**/\r\n\tpublic static inline function stamp():Float {\r\n\t\t#if flash\r\n\t\treturn flash.Lib.getTimer() / 1000;\r\n\t\t#elseif js\r\n\t\t#if nodejs\r\n\t\tvar hrtime = js.Syntax.code('process.hrtime()'); // [seconds, remaining nanoseconds]\r\n\t\treturn hrtime[0] + hrtime[1] / 1e9;\r\n\t\t#else\r\n\t\treturn @:privateAccess HxOverrides.now() / 1000;\r\n\t\t#end\r\n\t\t#elseif cpp\r\n\t\treturn untyped __global__.__time_stamp();\r\n\t\t#elseif python\r\n\t\treturn Sys.cpuTime();\r\n\t\t#elseif sys\r\n\t\treturn Sys.time();\r\n\t\t#else\r\n\t\treturn 0;\r\n\t\t#end\r\n\t}\r\n}","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.ds;\r\n\r\n/**\r\n\tBalancedTree allows key-value mapping with arbitrary keys, as long as they\r\n\tcan be ordered. By default, `Reflect.compare` is used in the `compare`\r\n\tmethod, which can be overridden in subclasses.\r\n\r\n\tOperations have a logarithmic average and worst-case cost.\r\n\r\n\tIteration over keys and values, using `keys` and `iterator` respectively,\r\n\tare in-order.\r\n**/\r\nclass BalancedTree<K, V> implements haxe.Constraints.IMap<K, V> {\r\n\tvar root:TreeNode<K, V>;\r\n\r\n\t/**\r\n\t\tCreates a new BalancedTree, which is initially empty.\r\n\t**/\r\n\tpublic function new() {}\r\n\r\n\t/**\r\n\t\tBinds `key` to `value`.\r\n\r\n\t\tIf `key` is already bound to a value, that binding disappears.\r\n\r\n\t\tIf `key` is null, the result is unspecified.\r\n\t**/\r\n\tpublic function set(key:K, value:V) {\r\n\t\troot = setLoop(key, value, root);\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns the value `key` is bound to.\r\n\r\n\t\tIf `key` is not bound to any value, `null` is returned.\r\n\r\n\t\tIf `key` is null, the result is unspecified.\r\n\t**/\r\n\tpublic function get(key:K):Null<V> {\r\n\t\tvar node = root;\r\n\t\twhile (node != null) {\r\n\t\t\tvar c = compare(key, node.key);\r\n\t\t\tif (c == 0)\r\n\t\t\t\treturn node.value;\r\n\t\t\tif (c < 0)\r\n\t\t\t\tnode = node.left;\r\n\t\t\telse\r\n\t\t\t\tnode = node.right;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t\tRemoves the current binding of `key`.\r\n\r\n\t\tIf `key` has no binding, `this` BalancedTree is unchanged and false is\r\n\t\treturned.\r\n\r\n\t\tOtherwise the binding of `key` is removed and true is returned.\r\n\r\n\t\tIf `key` is null, the result is unspecified.\r\n\t**/\r\n\tpublic function remove(key:K) {\r\n\t\ttry {\r\n\t\t\troot = removeLoop(key, root);\r\n\t\t\treturn true;\r\n\t\t} catch (e:String) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t\tTells if `key` is bound to a value.\r\n\r\n\t\tThis method returns true even if `key` is bound to null.\r\n\r\n\t\tIf `key` is null, the result is unspecified.\r\n\t**/\r\n\tpublic function exists(key:K) {\r\n\t\tvar node = root;\r\n\t\twhile (node != null) {\r\n\t\t\tvar c = compare(key, node.key);\r\n\t\t\tif (c == 0)\r\n\t\t\t\treturn true;\r\n\t\t\telse if (c < 0)\r\n\t\t\t\tnode = node.left;\r\n\t\t\telse\r\n\t\t\t\tnode = node.right;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t\tIterates over the bound values of `this` BalancedTree.\r\n\r\n\t\tThis operation is performed in-order.\r\n\t**/\r\n\tpublic function iterator():Iterator<V> {\r\n\t\tvar ret = [];\r\n\t\titeratorLoop(root, ret);\r\n\t\treturn ret.iterator();\r\n\t}\r\n\r\n\t/**\r\n\t\tSee `Map.keyValueIterator`\r\n\t**/\r\n\t@:runtime public inline function keyValueIterator():KeyValueIterator<K, V> {\r\n\t\treturn new haxe.iterators.MapKeyValueIterator(this);\r\n\t}\r\n\r\n\t/**\r\n\t\tIterates over the keys of `this` BalancedTree.\r\n\r\n\t\tThis operation is performed in-order.\r\n\t**/\r\n\tpublic function keys():Iterator<K> {\r\n\t\tvar ret = [];\r\n\t\tkeysLoop(root, ret);\r\n\t\treturn ret.iterator();\r\n\t}\r\n\r\n\tpublic function copy():BalancedTree<K, V> {\r\n\t\tvar copied = new BalancedTree<K, V>();\r\n\t\tcopied.root = root;\r\n\t\treturn copied;\r\n\t}\r\n\r\n\tfunction setLoop(k:K, v:V, node:TreeNode<K, V>) {\r\n\t\tif (node == null)\r\n\t\t\treturn new TreeNode<K, V>(null, k, v, null);\r\n\t\tvar c = compare(k, node.key);\r\n\t\treturn if (c == 0) new TreeNode<K, V>(node.left, k, v, node.right, node.get_height()); else if (c < 0) {\r\n\t\t\tvar nl = setLoop(k, v, node.left);\r\n\t\t\tbalance(nl, node.key, node.value, node.right);\r\n\t\t} else {\r\n\t\t\tvar nr = setLoop(k, v, node.right);\r\n\t\t\tbalance(node.left, node.key, node.value, nr);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction removeLoop(k:K, node:TreeNode<K, V>) {\r\n\t\tif (node == null)\r\n\t\t\tthrow \"Not_found\";\r\n\t\tvar c = compare(k, node.key);\r\n\t\treturn if (c == 0) merge(node.left,\r\n\t\t\tnode.right); else if (c < 0) balance(removeLoop(k, node.left), node.key, node.value,\r\n\t\t\tnode.right); else balance(node.left, node.key, node.value, removeLoop(k, node.right));\r\n\t}\r\n\r\n\tstatic function iteratorLoop<K,V>(node:TreeNode<K, V>, acc:Array<V>) {\r\n\t\tif (node != null) {\r\n\t\t\titeratorLoop(node.left, acc);\r\n\t\t\tacc.push(node.value);\r\n\t\t\titeratorLoop(node.right, acc);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction keysLoop(node:TreeNode<K, V>, acc:Array<K>) {\r\n\t\tif (node != null) {\r\n\t\t\tkeysLoop(node.left, acc);\r\n\t\t\tacc.push(node.key);\r\n\t\t\tkeysLoop(node.right, acc);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction merge(t1, t2) {\r\n\t\tif (t1 == null)\r\n\t\t\treturn t2;\r\n\t\tif (t2 == null)\r\n\t\t\treturn t1;\r\n\t\tvar t = minBinding(t2);\r\n\t\treturn balance(t1, t.key, t.value, removeMinBinding(t2));\r\n\t}\r\n\r\n\tfunction minBinding(t:TreeNode<K, V>) {\r\n\t\treturn if (t == null) throw \"Not_found\"; else if (t.left == null) t; else minBinding(t.left);\r\n\t}\r\n\r\n\tfunction removeMinBinding(t:TreeNode<K, V>) {\r\n\t\treturn if (t.left == null) t.right; else balance(removeMinBinding(t.left), t.key, t.value, t.right);\r\n\t}\r\n\r\n\tfunction balance(l:TreeNode<K, V>, k:K, v:V, r:TreeNode<K, V>):TreeNode<K, V> {\r\n\t\tvar hl = l.get_height();\r\n\t\tvar hr = r.get_height();\r\n\t\treturn if (hl > hr + 2) {\r\n\t\t\tif (l.left.get_height() >= l.right.get_height())\r\n\t\t\t\tnew TreeNode<K, V>(l.left, l.key, l.value, new TreeNode<K, V>(l.right, k, v, r));\r\n\t\t\telse\r\n\t\t\t\tnew TreeNode<K, V>(new TreeNode<K, V>(l.left, l.key, l.value, l.right.left), l.right.key, l.right.value,\r\n\t\t\t\t\tnew TreeNode<K, V>(l.right.right, k, v, r));\r\n\t\t} else if (hr > hl + 2) {\r\n\t\t\tif (r.right.get_height() > r.left.get_height())\r\n\t\t\t\tnew TreeNode<K, V>(new TreeNode<K, V>(l, k, v, r.left), r.key, r.value, r.right);\r\n\t\t\telse\r\n\t\t\t\tnew TreeNode<K, V>(new TreeNode<K, V>(l, k, v, r.left.left), r.left.key, r.left.value,\r\n\t\t\t\t\tnew TreeNode<K, V>(r.left.right, r.key, r.value, r.right));\r\n\t\t} else {\r\n\t\t\tnew TreeNode<K, V>(l, k, v, r, (hl > hr ? hl : hr) + 1);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction compare(k1:K, k2:K) {\r\n\t\treturn Reflect.compare(k1, k2);\r\n\t}\r\n\r\n\tpublic function toString() {\r\n\t\treturn root == null ? \"[]\" : '[${root.toString()}]';\r\n\t}\r\n\r\n\t/**\r\n\t\tRemoves all keys from `this` BalancedTree.\r\n\t**/\r\n\tpublic function clear():Void {\r\n\t\troot = null;\r\n\t}\r\n}\r\n\r\n/**\r\n\tA tree node of `haxe.ds.BalancedTree`.\r\n**/\r\nclass TreeNode<K, V> {\r\n\tpublic var left:TreeNode<K, V>;\r\n\tpublic var right:TreeNode<K, V>;\r\n\tpublic var key:K;\r\n\tpublic var value:V;\r\n\r\n\tvar _height:Int;\r\n\r\n\tpublic function new(l, k, v, r, h = -1) {\r\n\t\tleft = l;\r\n\t\tkey = k;\r\n\t\tvalue = v;\r\n\t\tright = r;\r\n\t\tif (h == -1)\r\n\t\t\t_height = (left.get_height() > right.get_height() ? left.get_height() : right.get_height()) + 1;\r\n\t\telse\r\n\t\t\t_height = h;\r\n\t}\r\n\r\n\textern public inline function get_height()\r\n\t\treturn this == null ? 0 : _height;\r\n\r\n\tpublic function toString() {\r\n\t\treturn (left == null ? \"\" : left.toString() + \", \") + '$key => $value' + (right == null ? \"\" : \", \" + right.toString());\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.ds;\r\n\r\n/**\r\n\tEnumValueMap allows mapping of enum value keys to arbitrary values.\r\n\r\n\tKeys are compared by value and recursively over their parameters. If any\r\n\tparameter is not an enum value, `Reflect.compare` is used to compare them.\r\n**/\r\nclass EnumValueMap<K:EnumValue, V> extends haxe.ds.BalancedTree<K, V> implements haxe.Constraints.IMap<K, V> {\r\n\toverride function compare(k1:EnumValue, k2:EnumValue):Int {\r\n\t\tvar d = k1.getIndex() - k2.getIndex();\r\n\t\tif (d != 0)\r\n\t\t\treturn d;\r\n\t\t#if hl\r\n\t\tvar a1 = @:privateAccess Type._enumParameters(k1);\r\n\t\tvar a2 = @:privateAccess Type._enumParameters(k2);\r\n\t\tvar ld = a1.length - a2.length;\r\n\t\tif (ld != 0)\r\n\t\t\treturn ld;\r\n\t\tfor (i in 0...a1.length) {\r\n\t\t\tvar d = compareArg(a1[i], a2[i]);\r\n\t\t\tif (d != 0)\r\n\t\t\t\treturn d;\r\n\t\t}\r\n\t\treturn 0;\r\n\t\t#else\r\n\t\tvar p1 = k1.getParameters();\r\n\t\tvar p2 = k2.getParameters();\r\n\t\tif (p1.length == 0 && p2.length == 0)\r\n\t\t\treturn 0;\r\n\t\treturn compareArgs(p1, p2);\r\n\t\t#end\r\n\t}\r\n\r\n\tfunction compareArgs(a1:Array<Dynamic>, a2:Array<Dynamic>):Int {\r\n\t\tvar ld = a1.length - a2.length;\r\n\t\tif (ld != 0)\r\n\t\t\treturn ld;\r\n\t\tfor (i in 0...a1.length) {\r\n\t\t\tvar d = compareArg(a1[i], a2[i]);\r\n\t\t\tif (d != 0)\r\n\t\t\t\treturn d;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tfunction compareArg(v1:Dynamic, v2:Dynamic):Int {\r\n\t\treturn if (Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {\r\n\t\t\tcompare(v1, v2);\r\n\t\t} else if (Std.isOfType(v1, Array) && Std.isOfType(v2, Array)) {\r\n\t\t\tcompareArgs(v1, v2);\r\n\t\t} else {\r\n\t\t\tReflect.compare(v1, v2);\r\n\t\t}\r\n\t}\r\n\r\n\toverride function copy():EnumValueMap<K, V> {\r\n\t\tvar copied = new EnumValueMap<K, V>();\r\n\t\tcopied.root = root;\r\n\t\treturn copied;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.ds;\r\n\r\n@:coreApi class IntMap<T> implements haxe.Constraints.IMap<Int, T> {\r\n\tprivate var h:Dynamic;\r\n\r\n\tpublic inline function new():Void {\r\n\t\th = {};\r\n\t}\r\n\r\n\tpublic inline function set(key:Int, value:T):Void {\r\n\t\th[key] = value;\r\n\t}\r\n\r\n\tpublic inline function get(key:Int):Null<T> {\r\n\t\treturn h[key];\r\n\t}\r\n\r\n\tpublic inline function exists(key:Int):Bool {\r\n\t\treturn (cast h).hasOwnProperty(key);\r\n\t}\r\n\r\n\tpublic function remove(key:Int):Bool {\r\n\t\tif (!(cast h).hasOwnProperty(key))\r\n\t\t\treturn false;\r\n\t\tjs.Syntax.delete(h, key);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic function keys():Iterator<Int> {\r\n\t\tvar a = [];\r\n\t\tjs.Syntax.code(\"for( var key in {0} ) if({0}.hasOwnProperty(key)) {1}.push(+key)\", h, a);\r\n\t\treturn a.iterator();\r\n\t}\r\n\r\n\tpublic function iterator():Iterator<T> {\r\n\t\treturn untyped {\r\n\t\t\tref: h,\r\n\t\t\tit: keys(),\r\n\t\t\thasNext: function() {\r\n\t\t\t\treturn __this__.it.hasNext();\r\n\t\t\t},\r\n\t\t\tnext: function() {\r\n\t\t\t\tvar i = __this__.it.next();\r\n\t\t\t\treturn __this__.ref[i];\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t@:runtime public inline function keyValueIterator():KeyValueIterator<Int, T> {\r\n\t\treturn new haxe.iterators.MapKeyValueIterator(this);\r\n\t}\r\n\r\n\tpublic function copy():IntMap<T> {\r\n\t\tvar copied = new IntMap();\r\n\t\tfor (key in keys())\r\n\t\t\tcopied.set(key, get(key));\r\n\t\treturn copied;\r\n\t}\r\n\r\n\tpublic function toString():String {\r\n\t\tvar s = new StringBuf();\r\n\t\ts.add(\"[\");\r\n\t\tvar it = keys();\r\n\t\tfor (i in it) {\r\n\t\t\ts.add(i);\r\n\t\t\ts.add(\" => \");\r\n\t\t\ts.add(Std.string(get(i)));\r\n\t\t\tif (it.hasNext())\r\n\t\t\t\ts.add(\", \");\r\n\t\t}\r\n\t\ts.add(\"]\");\r\n\t\treturn s.toString();\r\n\t}\r\n\r\n\tpublic inline function clear():Void {\r\n\t\th = {};\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2018 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.iterators;\r\n\r\n/**\r\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\r\n**/\r\nclass ArrayIterator<T> {\r\n\tfinal array:Array<T>;\r\n\tvar current:Int = 0;\r\n\r\n\t/**\r\n\t\tCreate a new `ArrayIterator`.\r\n\t**/\r\n\t#if !hl inline #end\r\n\tpublic function new(array:Array<T>) {\r\n\t\tthis.array = array;\r\n\t}\r\n\r\n\t/**\r\n\t\tSee `Iterator.hasNext`\r\n\t**/\r\n\t#if !hl inline #end\r\n\tpublic function hasNext() {\r\n\t\treturn current < array.length;\r\n\t}\r\n\r\n\t/**\r\n\t\tSee `Iterator.next`\r\n\t**/\r\n\t#if !hl inline #end\r\n\tpublic function next() {\r\n\t\treturn array[current++];\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage js;\r\n\r\nimport js.Syntax; // import it here so it's always available in the compiler\r\n\r\n@:dox(hide)\r\nclass Boot {\r\n\tstatic inline function isClass(o:Dynamic):Bool {\r\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\r\n\t}\r\n\r\n\tstatic inline function isInterface(o:Class<Dynamic>):Bool {\r\n\t\treturn untyped __define_feature__(\"js.Boot.isInterface\", o.__isInterface__);\r\n\t}\r\n\r\n\tstatic inline function isEnum(e:Dynamic):Bool {\r\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\r\n\t}\r\n\r\n\t@:pure static function getClass(o:Null<Dynamic>):Null<Dynamic> {\r\n\t\tif (o == null) {\r\n\t\t\treturn null;\r\n\t\t} else if (Std.isOfType(o, Array)) {\r\n\t\t\treturn Array;\r\n\t\t} else {\r\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\r\n\t\t\tif (cl != null)\r\n\t\t\t\treturn cl;\r\n\t\t\tvar name = __nativeClassName(o);\r\n\t\t\tif (name != null)\r\n\t\t\t\treturn __resolveNativeClass(name);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t@:ifFeature(\"has_enum\")\r\n\tprivate static function __string_rec(o, s:String) {\r\n\t\tuntyped {\r\n\t\t\tif (o == null)\r\n\t\t\t\treturn \"null\";\r\n\t\t\tif (s.length >= 5)\r\n\t\t\t\treturn \"<...>\"; // too much deep recursion\r\n\t\t\tvar t = js.Syntax.typeof(o);\r\n\t\t\tif (t == \"function\" && (isClass(o) || isEnum(o)))\r\n\t\t\t\tt = \"object\";\r\n\t\t\tswitch (t) {\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\t\t#if !js_enums_as_arrays\r\n\t\t\t\t\t__feature__(\"has_enum\", if (o.__enum__) {\r\n\t\t\t\t\t\tvar e = $hxEnums[o.__enum__];\r\n\t\t\t\t\t\tvar con = e.__constructs__[o._hx_index];\r\n\t\t\t\t\t\tvar n = con._hx_name;\r\n\t\t\t\t\t\tif (con.__params__) {\r\n\t\t\t\t\t\t\ts += \"\\t\";\r\n\t\t\t\t\t\t\treturn n + \"(\" + [for (p in (con.__params__ : Array<String>)) __string_rec(o[p], s)].join(\",\") + \")\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn n;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t#end\r\n\t\t\t\t\tif (js.Syntax.instanceof(o, Array)) {\r\n\t\t\t\t\t\t#if js_enums_as_arrays\r\n\t\t\t\t\t\t__feature__(\"has_enum\", if (o.__enum__) {\r\n\t\t\t\t\t\t\tif (o.length == 2)\r\n\t\t\t\t\t\t\t\treturn o[0];\r\n\t\t\t\t\t\t\tvar str = o[0] + \"(\";\r\n\t\t\t\t\t\t\ts += \"\\t\";\r\n\t\t\t\t\t\t\tfor (i in 2...o.length) {\r\n\t\t\t\t\t\t\t\tif (i != 2)\r\n\t\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i], s);\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\tstr += __string_rec(o[i], s);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn str + \")\";\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t#end\r\n\t\t\t\t\t\tvar str = \"[\";\r\n\t\t\t\t\t\ts += \"\\t\";\r\n\t\t\t\t\t\tfor (i in 0...o.length)\r\n\t\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\") + __string_rec(o[i], s);\r\n\t\t\t\t\t\tstr += \"]\";\r\n\t\t\t\t\t\treturn str;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar tostr;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\ttostr = untyped o.toString;\r\n\t\t\t\t\t} catch (e:Dynamic) {\r\n\t\t\t\t\t\t// strange error on IE\r\n\t\t\t\t\t\treturn \"???\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (tostr != null && tostr != js.Syntax.code(\"Object.toString\") && js.Syntax.typeof(tostr) == \"function\") {\r\n\t\t\t\t\t\tvar s2 = o.toString();\r\n\t\t\t\t\t\tif (s2 != \"[object Object]\")\r\n\t\t\t\t\t\t\treturn s2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar str = \"{\\n\";\r\n\t\t\t\t\ts += \"\\t\";\r\n\t\t\t\t\tvar hasp = (o.hasOwnProperty != null);\r\n\t\t\t\t\tvar k:String = null;\r\n\t\t\t\t\tjs.Syntax.code(\"for( {0} in {1} ) {\", k, o);\r\n\t\t\t\t\tif (hasp && !o.hasOwnProperty(k))\r\n\t\t\t\t\t\tjs.Syntax.code(\"continue\");\r\n\t\t\t\t\tif (k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\")\r\n\t\t\t\t\t\tjs.Syntax.code(\"continue\");\r\n\t\t\t\t\tif (str.length != 2)\r\n\t\t\t\t\t\tstr += \", \\n\";\r\n\t\t\t\t\tstr += s + k + \" : \" + __string_rec(o[k], s);\r\n\t\t\t\t\tjs.Syntax.code(\"}\");\r\n\t\t\t\t\ts = s.substring(1);\r\n\t\t\t\t\tstr += \"\\n\" + s + \"}\";\r\n\t\t\t\t\treturn str;\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\t\treturn \"<function>\";\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\treturn o;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn String(o);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@:pure private static function __interfLoop(cc:Dynamic, cl:Dynamic) {\r\n\t\tif (cc == null)\r\n\t\t\treturn false;\r\n\t\tif (cc == cl)\r\n\t\t\treturn true;\r\n\t\tvar intf:Dynamic = cc.__interfaces__;\r\n\t\tif (intf != null\r\n\t\t\t// ES6 classes inherit statics, so we want to avoid accessing inherited `__interfaces__`\r\n\t\t\t#if (js_es >= 6) && (cc.__super__ == null || cc.__super__.__interfaces__ != intf) #end\r\n\t\t) {\r\n\t\t\tfor (i in 0...intf.length) {\r\n\t\t\t\tvar i:Dynamic = intf[i];\r\n\t\t\t\tif (i == cl || __interfLoop(i, cl))\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn __interfLoop(cc.__super__, cl);\r\n\t}\r\n\r\n\t@:pure private static function __instanceof(o:Dynamic, cl:Dynamic) {\r\n\t\tif (cl == null)\r\n\t\t\treturn false;\r\n\t\tswitch (cl) {\r\n\t\t\tcase Int:\r\n\t\t\t\treturn js.Syntax.typeof(o) == \"number\" && js.Syntax.strictEq(o | 0, o);\r\n\t\t\tcase Float:\r\n\t\t\t\treturn js.Syntax.typeof(o) == \"number\";\r\n\t\t\tcase Bool:\r\n\t\t\t\treturn js.Syntax.typeof(o) == \"boolean\";\r\n\t\t\tcase String:\r\n\t\t\t\treturn js.Syntax.typeof(o) == \"string\";\r\n\t\t\tcase Array:\r\n\t\t\t\treturn js.Syntax.instanceof(o, Array) #if js_enums_as_arrays && o.__enum__ == null #end;\r\n\t\t\tcase Dynamic:\r\n\t\t\t\treturn o != null;\r\n\t\t\tdefault:\r\n\t\t\t\tif (o != null) {\r\n\t\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\r\n\t\t\t\t\tif (js.Syntax.typeof(cl) == \"function\") {\r\n\t\t\t\t\t\tif (__downcastCheck(o, cl))\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else if (js.Syntax.typeof(cl) == \"object\" && __isNativeObj(cl)) {\r\n\t\t\t\t\t\tif (js.Syntax.instanceof(o, cl))\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t// do not use isClass/isEnum here\r\n\t\t\t\tuntyped __feature__(\"Class.*\", if (cl == Class && o.__name__ != null) return true);\r\n\t\t\t\tuntyped __feature__(\"Enum.*\", if (cl == Enum && o.__ename__ != null) return true);\r\n\t\t\t\t#if js_enums_as_arrays\r\n\t\t\t\treturn o.__enum__ == cl;\r\n\t\t\t\t#else\r\n\t\t\t\treturn untyped __feature__(\r\n\t\t\t\t\t\"has_enum\",\r\n\t\t\t\t\tif (o.__enum__ != null) ($hxEnums[o.__enum__]) == cl else false,\r\n\t\t\t\t\tfalse\r\n\t\t\t\t);\r\n\t\t\t\t#end\r\n\t\t}\r\n\t}\r\n\r\n\tstatic function __downcastCheck(o:Dynamic, cl:Class<Dynamic>):Bool {\r\n\t\treturn js.Syntax.instanceof(o, cl) || (isInterface(cl) && inline __implements(o, cl));\r\n\t}\r\n\r\n\tstatic function __implements(o:Dynamic, iface:Class<Dynamic>):Bool {\r\n\t\treturn __interfLoop(getClass(o), iface);\r\n\t}\r\n\r\n\t@:ifFeature(\"typed_cast\") private static function __cast(o:Dynamic, t:Dynamic) {\r\n\t\tif (o == null || __instanceof(o, t))\r\n\t\t\treturn o;\r\n\t\telse\r\n\t\t\tthrow \"Cannot cast \" + Std.string(o) + \" to \" + Std.string(t);\r\n\t}\r\n\r\n\tstatic var __toStr:js.lib.Function;\r\n\r\n\tstatic function __init__() {\r\n\t\tBoot.__toStr = (cast {}).toString;\r\n\t}\r\n\r\n\t// get native JS [[Class]]\r\n\tstatic function __nativeClassName(o:Dynamic):String {\r\n\t\tvar name:String = __toStr.call(o).slice(8, -1);\r\n\t\t// exclude general Object and Function\r\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\r\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\r\n\t\t\treturn null;\r\n\t\treturn name;\r\n\t}\r\n\r\n\t// check for usable native JS object\r\n\tstatic function __isNativeObj(o:Dynamic):Bool {\r\n\t\treturn __nativeClassName(o) != null;\r\n\t}\r\n\r\n\t// resolve native JS class in the global scope:\r\n\tstatic function __resolveNativeClass(name:String) {\r\n\t\treturn js.Lib.global[cast name];\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport js.Boot;\r\nimport js.Syntax;\r\n\r\n@:keepInit\r\n@:coreApi class Std {\r\n\t@:deprecated('Std.is is deprecated. Use Std.isOfType instead.')\r\n\tpublic static inline function is(v:Dynamic, t:Dynamic):Bool {\r\n\t\treturn isOfType(v, t);\r\n\t}\r\n\r\n\tpublic static inline function isOfType(v:Dynamic, t:Dynamic):Bool {\r\n\t\treturn @:privateAccess js.Boot.__instanceof(v, t);\r\n\t}\r\n\r\n\tpublic static inline function downcast<T:{}, S:T>(value:T, c:Class<S>):S@:privateAccess {\r\n\t\treturn if (js.Boot.__downcastCheck(value, c)) cast value else null;\r\n\t}\r\n\r\n\t@:deprecated('Std.instance() is deprecated. Use Std.downcast() instead.')\r\n\tpublic static inline function instance<T:{}, S:T>(value:T, c:Class<S>):S {\r\n\t\treturn downcast(value, c);\r\n\t}\r\n\r\n\t@:pure\r\n\tpublic static function string(s:Dynamic):String {\r\n\t\treturn @:privateAccess js.Boot.__string_rec(s, \"\");\r\n\t}\r\n\r\n\tpublic static inline function int(x:Float):Int {\r\n\t\treturn (cast x) | 0;\r\n\t}\r\n\r\n\t@:pure\r\n\tpublic static function parseInt(x:String):Null<Int> {\r\n\t\t#if (js_es >= 5)\r\n\t\tfinal v = js.Lib.parseInt(x);\r\n\t\t#else\r\n\t\t// before ES5, octal was supported in some implementations, so we need to explicitly use base 10 or 16\r\n\t\tif (x == null)\r\n\t\t\treturn null;\r\n\t\tvar v:Float = Math.NaN;\r\n\t\tfor (i => c in StringTools.keyValueIterator(x)) {\r\n\t\t\tif ((c <= 8 || c >= 14) && !(c == ' '.code || c == '-'.code || c == '+'.code)) {\r\n\t\t\t\tfinal nc = js.Syntax.code(\"{0}[{1}]\", x, i + 1);\r\n\t\t\t\tv = js.Lib.parseInt(x, c == '0'.code && (nc == \"x\" || nc == \"X\") ? 16 : 10);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t#end\r\n\t\tif (Math.isNaN(v))\r\n\t\t\treturn null;\r\n\t\treturn cast v;\r\n\t}\r\n\r\n\tpublic static inline function parseFloat(x:String):Float {\r\n\t\treturn js.Syntax.code(\"parseFloat({0})\", x);\r\n\t}\r\n\r\n\tpublic static function random(x:Int):Int {\r\n\t\treturn x <= 0 ? 0 : Math.floor(Math.random() * x);\r\n\t}\r\n\r\n\tstatic function __init__():Void\r\n\t\tuntyped {\r\n\t\t\t__feature__(\"js.Boot.getClass\", Object.defineProperty(String.prototype, \"__class__\", {value: __feature__(\"Type.resolveClass\", $hxClasses[\"String\"] = String, String), enumerable: false, writable: true}));\r\n\t\t\t__feature__(\"js.Boot.isClass\", String.__name__ = __feature__(\"Type.getClassName\", \"String\", true));\r\n\t\t\t__feature__(\"Type.resolveClass\", $hxClasses[\"Array\"] = Array);\r\n\t\t\t__feature__(\"js.Boot.isClass\", Array.__name__ = __feature__(\"Type.getClassName\", \"Array\", true));\r\n\t\t\t__feature__(\"Date.*\", {\r\n\t\t\t\t__feature__(\"js.Boot.getClass\",\r\n\t\t\t\t\tjs.Syntax.code('Date').prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"Date\"] = js.Syntax.code('Date'), js.Syntax.code('Date')));\r\n\t\t\t\t__feature__(\"js.Boot.isClass\", js.Syntax.code('Date').__name__ = \"Date\");\r\n\t\t\t});\r\n\t\t\t__feature__(\"Int.*\", js.Syntax.code('var Int = { };'));\r\n\t\t\t__feature__(\"Dynamic.*\", js.Syntax.code('var Dynamic = { };'));\r\n\t\t\t__feature__(\"Float.*\", js.Syntax.code('var Float = Number'));\r\n\t\t\t__feature__(\"Bool.*\", js.Syntax.code('var Bool = Boolean'));\r\n\t\t\t__feature__(\"Class.*\", js.Syntax.code('var Class = { };'));\r\n\t\t\t__feature__(\"Enum.*\", js.Syntax.code('var Enum = { };'));\r\n\t\t\t#if (js_es < 5)\r\n\t\t\t__feature__(\"Array.map\", if (Array.prototype.map == null) Array.prototype.map = function(f) {\r\n\t\t\t\tvar a = [];\r\n\t\t\t\tfor (i in 0...__this__.length)\r\n\t\t\t\t\ta[i] = f(__this__[i]);\r\n\t\t\t\treturn a;\r\n\t\t\t});\r\n\t\t\t__feature__(\"Array.filter\", if (Array.prototype.filter == null) Array.prototype.filter = function(f) {\r\n\t\t\t\tvar a = [];\r\n\t\t\t\tfor (i in 0...__this__.length) {\r\n\t\t\t\t\tvar e = __this__[i];\r\n\t\t\t\t\tif (f(e))\r\n\t\t\t\t\t\ta.push(e);\r\n\t\t\t\t}\r\n\t\t\t\treturn a;\r\n\t\t\t});\r\n\t\t\t#end\r\n\t\t}\r\n}\r\n"],
"names":[],
"mappings":"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"
}